{
    "sourceFile": "readme.md",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1748590819814,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1748590819814,
            "name": "Commit-0",
            "content": "# EETT Antenna Scraper\n\nA Python web scraper for extracting antenna data from the Greek National Telecommunications and Post Commission (EETT) website.\n\n## Description\n\nThis tool scrapes antenna installation data from the official EETT database at https://keraies.eett.gr/. It can search for antennas by municipality and export the results to CSV and Excel formats.\n\n## Features\n\n- Search for antennas by municipality name\n- Pagination support for large datasets\n- Export to both CSV and Excel formats\n- Comprehensive error handling and debugging\n- Respectful scraping with built-in delays\n- Greek language support\n\n## Installation\n\n1. Clone this repository:\n```bash\ngit clone https://github.com/GeorgePanagiotou/eett-antenna-scraper.git\ncd eett-antenna-scraper\n```\n\n2. Install required dependencies:\n```bash\npip install -r requirements.txt\n```\n\n## Usage\n\n### Basic Usage\n\nSearch for antennas in a specific municipality:\n```bash\npython eett_scraper.py \"Αθηναίων\"\n```\n\n### Advanced Usage\n\nLimit the number of pages to scrape:\n```bash\npython eett_scraper.py \"Χαλκιδέων\" 5\n```\n\nList available municipalities:\n```bash\npython eett_scraper.py --list\n```\n\n### Command Line Arguments\n\n- `municipality_name`: Name of the municipality to search (required)\n- `max_pages`: Maximum number of pages to scrape (optional)\n- `--list` or `-l`: List all available municipalities\n\n## Output\n\nThe scraper generates two files:\n- `antennas_{municipality_name}.csv`: CSV format\n- `antennas_{municipality_name}.xlsx`: Excel format\n\n### Data Fields\n\nEach antenna record includes:\n- `sequence`: Sequential number\n- `position_code`: Unique position code\n- `category`: Antenna category\n- `company`: Operating company\n- `address`: Installation address\n- `municipality`: Municipality name\n\n## Examples\n\n```bash\n# Search for antennas in Athens\npython eett_scraper.py \"Αθηναίων\"\n\n# Search first 3 pages in Thessaloniki\npython eett_scraper.py \"Θεσσαλονίκης\" 3\n\n# List all available municipalities\npython eett_scraper.py --list\n```\n\n## Requirements\n\n- Python 3.6+\n- requests\n- pandas\n- beautifulsoup4\n- openpyxl (for Excel export)\n\n## Legal and Ethical Considerations\n\n- This scraper respects the EETT website's terms of service\n- Built-in delays prevent server overload\n- Data is publicly available on the EETT website\n- Use responsibly and in accordance with Greek law\n\n## Troubleshooting\n\n### Common Issues\n\n1. **No data found**: \n   - Check municipality name spelling\n   - Use `--list` to see available municipalities\n   - Verify website accessibility\n\n2. **Connection errors**:\n   - Check internet connection\n   - Website may be temporarily unavailable\n\n3. **Parsing errors**:\n   - Website structure may have changed\n   - Check debug output files for analysis\n\n### Debug Mode\n\nThe scraper automatically saves debug HTML files for the first two pages to help with troubleshooting.\n\n## Contributing\n\n1. Fork the repository\n2. Create a feature branch (`git checkout -b feature/amazing-feature`)\n3. Commit your changes (`git commit -m 'Add some amazing feature'`)\n4. Push to the branch (`git push origin feature/amazing-feature`)\n5. Open a Pull Request\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.\n\n## Disclaimer\n\nThis tool is for educational and research purposes. Users are responsible for ensuring their use complies with applicable laws and the website's terms of service.\n\n## Changelog\n\n### Version 1.0.0\n- Initial release\n- Basic municipality search functionality\n- CSV and Excel export\n- Pagination support\n- Error handling and debugging features\n\n## Support\n\nIf you encounter any issues or have questions, please open an issue on GitHub.\n"
        }
    ]
}